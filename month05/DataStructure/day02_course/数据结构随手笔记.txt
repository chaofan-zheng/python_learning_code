1、数据结构与算法
   所有岗位的必备技能(尤其是大厂面试)
2、时间复杂度
   算法执行运算步骤的数量,叫时间复杂度
   O(1)<O(logn)<O(n)<O(nlogn)<O(n^2)<O(n^3)
3、数据结构分类
  3.1> 线性结构
       顺序表：各元素分布在内存的连续的存储空间中
           基本形式：元素本身连续存储
	   元素外置：元素本身不连续存储,地址单元连续存储
	   Python中的列表就是顺序表
       链表
       堆栈
       队列
  3.2> 非线性结构
       树
4、链表
   节点对象
   头节点
   尾节点(next指向None)
   头节点为None的链表为空链表
5、树
  5.1> 树根: 没有父节点的节点叫根节点(root)
  5.2> 节点的度: 节点子树的个数
  5.3> 树的度: 树中节点的最大度数
  5.4> 叶子节点: 度为0的节点
  5.5> 节点层次: 根为第1层,具体看节点在第几层
  5.6> 树的深度: 树中节点的最大层次
  5.7> 平衡二叉树: 任何节点的子树的高度差不大于1的二叉树
  5.8> 二叉排序树: 任何节点,所有左边的值都比此节点小,所有右边的值都比此节点大
  5.9> 完全二叉树: 二叉树深度为d,除了d层外,其他各层节点数均已达到最大值,并且d层的节点从左到右连续紧密的排列
  5.10>满二叉树: 所有叶子节点都在最底层的完全二叉树







链表：
     单链表(课上所说)
     单向循环链表
     双链表
     双向循环链表

堆栈：
   后进先出(LIFO)
   栈顶：负责入栈 和 出栈
   栈底：不进行任何操作
   空栈：当栈中没有任何元素时叫空栈

实现栈：
   方式一：顺序栈(使用顺序表实现)
   方式二：链式栈(使用链表实现)


队列：
   先进先出(FIFO)
   队尾入队
   队头出队
   空队列
队列实现的两种方式
   方式一：顺序队列(使用顺序表实现)
   方式二：链式队列(使用链表实现)








